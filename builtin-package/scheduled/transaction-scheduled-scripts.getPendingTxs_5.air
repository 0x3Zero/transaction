; This file is auto-generated. Do not edit manually: changes may be erased.
; Generated by Aqua compiler: https://github.com/fluencelabs/aqua/.
; If you find any bugs, please write an issue on GitHub: https://github.com/fluencelabs/aqua/issues
; Aqua version: 0.9.1-0.9.2

(seq
 (call %init_peer_id% ("transaction" "get_pending_transactions") [] result)
 (xor
  (match result.$.success! true
   (fold result.$.transactions! tx-0
    (seq
     (seq
      (seq
       (seq
        (call %init_peer_id% ("transaction" "get_transaction") [tx-0.$.hash!] tx-1)
        (xor
         (match tx-1.$.transaction.method! "contract"
          (call %init_peer_id% ("transaction" "bind_meta_contract") [tx-0.$.hash!])
         )
         (call %init_peer_id% ("op" "noop") [])
        )
       )
       (xor
        (match tx-1.$.transaction.method! "metadata"
         (seq
          (call %init_peer_id% ("transaction" "get_meta_contract_by_id") [tx-1.$.transaction.meta_contract_id!] metaContract)
          (xor
           (match metaContract.$.success! true
            (seq
             (seq
              (seq
               (call %init_peer_id% ("transaction" "get_metadatas") [tx-1.$.transaction.data_key! ""] metadatasResult)
               (call %init_peer_id% (metaContract.$.meta.meta_contract_id! "on_execute") [metaContract.$.meta! metadatasResult.$.metadatas! tx-1.$.transaction!] metaContractResult)
              )
              (call %init_peer_id% ("transaction" "set_metadata") [tx-0.$.hash! metaContract.$.meta.meta_contract_id! metaContractResult.$.result! metaContractResult.$.metadatas! metaContractResult.$.error_string!])
             )
             (xor
              (mismatch tx-1.$.transaction.token_key! ""
               (seq
                (call %init_peer_id% ("transaction" "get_meta_contract") [tx-1.$.transaction.token_key!] metaContractToken)
                (xor
                 (match metaContractToken.$.success! true
                  (seq
                   (seq
                    (call %init_peer_id% ("transaction" "get_metadatas") [tx-1.$.transaction.data_key! ""] metadatasTokenResult)
                    (call %init_peer_id% (metaContractToken.$.meta.meta_contract_id! "on_execute") [metaContractToken.$.meta! metadatasTokenResult.$.metadatas! tx-1.$.transaction!] metaContractTokenResult)
                   )
                   (call %init_peer_id% ("transaction" "set_metadata") [tx-0.$.hash! metaContractToken.$.meta.meta_contract_id! metaContractTokenResult.$.result! metaContractTokenResult.$.metadatas! metaContractTokenResult.$.error_string!])
                  )
                 )
                 (call %init_peer_id% ("op" "noop") [])
                )
               )
              )
              (call %init_peer_id% ("op" "noop") [])
             )
            )
           )
           (call %init_peer_id% ("op" "noop") [])
          )
         )
        )
        (call %init_peer_id% ("op" "noop") [])
       )
      )
      (xor
       (match tx-1.$.transaction.method! "cron"
        (call %init_peer_id% ("transaction" "set_cron") [tx-0.$.hash!])
       )
       (call %init_peer_id% ("op" "noop") [])
      )
     )
     (next tx-0)
    )
   )
  )
  (call %init_peer_id% ("op" "noop") [])
 )
)

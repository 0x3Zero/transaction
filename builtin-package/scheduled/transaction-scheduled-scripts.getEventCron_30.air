; This file is auto-generated. Do not edit manually: changes may be erased.
; Generated by Aqua compiler: https://github.com/fluencelabs/aqua/.
; If you find any bugs, please write an issue on GitHub: https://github.com/fluencelabs/aqua/issues
; Aqua version: 0.9.1-0.9.2

(new $meta_contract_result
 (new $evm_logs
  (seq
   (call %init_peer_id% ("transaction" "get_active_crons") [] results)
   (xor
    (match results.$.success! true
     (fold results.$.crons! result-0
      (seq
       (seq
        (seq
         (seq
          (seq
           (seq
            (call %init_peer_id% ("transaction" "get_cron_tx_latest_block") [result-0.$.address! result-0.$.chain! result-0.$.topic!] get_cron_tx_latest_block)
            (call %init_peer_id% ("fevm_json_rpc" "decimal_to_hex") [get_cron_tx_latest_block] decimal_to_hex)
           )
           (xor
            (match result-0.$.token_type! "erc1155"
             (seq
              (new $array-inline
               (seq
                (ap result-0.$.topic! $array-inline)
                (canon %init_peer_id% $array-inline  #array-inline-0)
               )
              )
              (call %init_peer_id% ("fevm_json_rpc" "eth_get_logs") [result-0.$.node_url! "https://ipfs.xfero.io/ipfs/QmSiZUtqkbEZPPFMN9ZihSbPskNxqkjBpAfB2NmwLv11N7?filename=CollaBeatNFT-abi.json" decimal_to_hex "latest" result-0.$.address! #array-inline-0] $evm_logs)
             )
            )
            (call %init_peer_id% ("op" "noop") [])
           )
          )
          (xor
           (match result-0.$.token_type! "erc721"
            (seq
             (new $array-inline-1
              (seq
               (ap result-0.$.topic! $array-inline-1)
               (canon %init_peer_id% $array-inline-1  #array-inline-1-0)
              )
             )
             (call %init_peer_id% ("fevm_json_rpc" "eth_get_logs") [result-0.$.node_url! "https://ipfs.xfero.io/ipfs/QmWmkDbQ9KA6yLR8C8TuavLwyk2g6TfHyixG5gwTRem3Nw?filename=ERC721_0x3Zero-abi.json" decimal_to_hex "latest" result-0.$.address! #array-inline-1-0] $evm_logs)
            )
           )
           (call %init_peer_id% ("op" "noop") [])
          )
         )
         (canon %init_peer_id% $evm_logs  #evm_logs_canon)
        )
        (fold #evm_logs_canon log-0
         (seq
          (new $datas
           (seq
            (seq
             (seq
              (seq
               (seq
                (call %init_peer_id% ("op" "array_length") [log-0] n)
                (par
                 (fold log-0 llog-0
                  (par
                   (seq
                    (seq
                     (call %init_peer_id% ("transaction" "deserialize_fork") [llog-0.$.data!] deserialize_fork)
                     (xor
                      (mismatch deserialize_fork.$.data! ""
                       (seq
                        (seq
                         (new $array-inline-2
                          (seq
                           (seq
                            (ap "string" $array-inline-2)
                            (ap "bytes" $array-inline-2)
                           )
                           (canon %init_peer_id% $array-inline-2  #array-inline-2-0)
                          )
                         )
                         (call %init_peer_id% ("fevm_json_rpc" "decode_abi") [#array-inline-2-0 deserialize_fork.$.data!] decode_abi)
                        )
                        (xor
                         (seq
                          (call %init_peer_id% ("op" "array_length") [decode_abi] array_length)
                          (match array_length 2
                           (seq
                            (seq
                             (call %init_peer_id% ("transaction" "get_meta_contract_by_id") [result-0.$.meta_contract_id!] metaContract)
                             (call %init_peer_id% (metaContract.$.meta.meta_contract_id! "on_mint") [metaContract.$.meta! decode_abi.$.[0]! deserialize_fork.$.token_id! decode_abi.$.[1]!] meta_result)
                            )
                            (xor
                             (match meta_result.$.result! true
                              (seq
                               (call %init_peer_id% ("transaction" "set_metadata_cron") [decode_abi.$.[0]! meta_result.$.result! meta_result.$.metadatas!])
                               (call %init_peer_id% ("transaction" "send_cron_tx") [result-0.$.cron_id! decode_abi.$.[0]! llog-0.$.data! llog-0.$.block_number! llog-0.$.transaction_hash! deserialize_fork.$.token_id!])
                              )
                             )
                             (call %init_peer_id% ("op" "noop") [])
                            )
                           )
                          )
                         )
                         (call %init_peer_id% ("op" "noop") [])
                        )
                       )
                      )
                      (call %init_peer_id% ("op" "noop") [])
                     )
                    )
                    (ap llog-0 $datas)
                   )
                   (next llog-0)
                  )
                  (never)
                 )
                 (null)
                )
               )
               (call %init_peer_id% ("math" "sub") [n 1] sub-0)
              )
              (call %init_peer_id% ("math" "sub") [n 1] sub)
             )
             (new $datas_test
              (seq
               (seq
                (seq
                 (call %init_peer_id% ("math" "add") [sub 1] datas_incr)
                 (fold $datas s
                  (seq
                   (seq
                    (ap s $datas_test)
                    (canon %init_peer_id% $datas_test  #datas_iter_canon)
                   )
                   (xor
                    (match #datas_iter_canon.length datas_incr
                     (null)
                    )
                    (next s)
                   )
                  )
                  (never)
                 )
                )
                (canon %init_peer_id% $datas_test  #datas_result_canon)
               )
               (ap #datas_result_canon datas_gate)
              )
             )
            )
            (ap datas_gate.$.[sub-0]! datas_gate-0)
           )
          )
          (next log-0)
         )
        )
       )
       (next result-0)
      )
     )
    )
    (call %init_peer_id% ("op" "noop") [])
   )
  )
 )
)

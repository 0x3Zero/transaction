module Registry.Scheduled declares *

import "dht.aqua"
import "meta-contract.aqua"

func validateTransaction(hash: string) -> bool:
  on HOST_PEER_ID:
    result <- Dht.get_transaction(hash)

    if result.transaction.method == "contract":
      Dht.bind_meta_contract(hash)
    
    if result.transaction.method == "metadata":
      fdbMetaContractResult <- Dht.get_meta_contract(result.transaction.token_key)
      if fdbMetaContractResult.success:
        MetaContract fdbMetaContractResult.meta.service_id
        metaContractResult <- MetaContract.on_execute(result.transaction.data)
        -- Dht.create_metadata(hash, metaContractResult.result, metaContractResult.metadatas, "")

  <- true

func getPendingTransactions_3600():
  on HOST_PEER_ID:
    result <- Dht.get_pending_transactions()

    if result.success:
      for tx <- result.transactions par:
        validateTransaction(tx.hash)